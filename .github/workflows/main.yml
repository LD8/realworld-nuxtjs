name: GitHub Actions Demo

on:
  push: 
    tags:
      # 只有在 push 有 v 开头的 tag 标签时才执行以下的 jobs
      - 'v*'

jobs:
  # 构建和部署
  build-and-deploy:
    # 运行环境
    runs-on: ubuntu-latest

    # 运行步骤
    steps:
      # 下载源码
      - name: Checkout
        uses: actions/checkout@master

      # 打包构建
      - name: Build
        uses: actions/setup-node@master
      - run: npm install
      - run: npm run build
        # 生成压缩包 release.tgz 文件
        # 这里增加了 pm2.config.json 文件，用于自动运行 npm run start 命令
      - run: tar -zcvf release.tgz .nuxt static app.js nuxt.config.js package.json
  package-lock.json pm2.config.json

      # 创建发布 Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          # 注意这里的 TOKEN 需要和 github 项目仓库中配置的 TOKEN 名称一致
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # 上传打包构建结果（release.tgz）到 GitHub Release 托管
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing its ID to get its outputs object,
          # which include a `upload_url`. See this blog post for more info:
          # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./release.tgz
          asset_name: release.tgz
          asset_content_type: application/x-tgz

      # 部署到服务器
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          # 首先在仓库的 /settings/secrets 中创建以下秘密
          # HOST：远端 IP 地址
          host: ${{ secrets.HOST }}
          # USERNAME 一般是 root
          username: ${{ secrets.USERNAME }}
          # 远端服务器密码
          password: ${{ secrets.PASSWORD }}
          # 端口号 PORT：默认22
          port: ${{ secrets.PORT }}
          # 此处脚本 script 是运行在部署服务器端的
          # 首先需确保远端是有 realworld-nuxtjs 目录的
          # wget 命令：下载刚才上传的打包结果 release.tgz，需配置链接地址
          # tar 命令：解压
          # （只）安装生产依赖项
          # pm2 reload：启用服务，需确保远端已有 pm2
          script: |
            cd /home/ubuntu/realworld-nuxtjs
            wget https://github.com/LD8/realworld-nuxtjs/releases/latest/download/release.tgz -O release.tgz
            tar zxvf release.tgz
            npm install --production
            pm2 reload pm2.config.json